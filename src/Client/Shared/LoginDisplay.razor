@using Microsoft.AspNetCore.Components.Authorization
@using CleanArchTemplate.Shared.Extensions
@using System
@inject NavigationManager Navigation

<RadzenStack Orientation="Orientation.Horizontal"  JustifyContent="JustifyContent.End" AlignItems="AlignItems.Center">
    <AuthorizeView>
        <Authorized>
           @context.User.GetLastName() @context.User.GetFirstName()!
           
            <RadzenProfileMenu>
                <Template>
                    <RadzenStack>
                        <RadzenGravatar Email="@context.User.GetEmail()">
                        </RadzenGravatar>
                         @*<UserAvatar />*@
                    </RadzenStack>
                </Template>
                <ChildContent>
                    <RadzenProfileMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenProfileMenuItem>
                    <RadzenProfileMenuItem Text="Account" Path="account" Icon="account_circle"></RadzenProfileMenuItem>
                    <RadzenProfileMenuItem Text="Log out" Path="authentication/logout" Icon="logout"></RadzenProfileMenuItem>
                </ChildContent>
            </RadzenProfileMenu>
        </Authorized>
        <NotAuthorized>
            <a class="mx-4" href="/Authentication/Login">Log in</a>
        </NotAuthorized>
    </AuthorizeView>

</RadzenStack>

@code{
    private async Task Logout()
    {
        await Excecutor.Run(async () =>
        {
            var result = await AuthenticationManager.Logout();
            result.ThrowIfNotSucceded();
        });
    }
}